spring.application.name=incident-backend

# PostgreSQL Connection
spring.datasource.url=jdbc:postgresql://localhost:5432/itincidents
spring.datasource.username=ituser
spring.datasource.password=itpass
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate / JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=Asia/Kolkata
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Security (login for web app, not DB)
spring.security.user.name=admin
spring.security.user.password={noop}admin123

# Server
server.port=8080

# CORS Configuration
cors.allowed-origins=http://localhost:5173,http://localhost:5174

# JWT (dev only; replace in production)
jwt.secret=ThisIsADevelopmentOnlyJwtSecretKey_ChangeMe_1234567890
jwt.expiration-ms=86400000

# Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=incident-service
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Topic and feature flag
kafka.logs-topic=it-logs
incident.auto-create-from-logs=true
# Dedupe window for similar incidents (in ms)
incident.auto-create-dedupe-window-ms=300000
